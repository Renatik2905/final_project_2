import sqlite3
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext, CallbackQueryHandler

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = ""

# –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
awaiting_admin_id = {}
awaiting_remove_admin_id = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–∞
def start(update: Update, context: CallbackContext) -> None:
    user = update.effective_user
    keyboard = [['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞'], ['–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞']]
    
    conn = sqlite3.connect("schedule.db")
    cursor = conn.cursor()
    cursor.execute("SELECT id FROM admins WHERE id = ?", (user.id,))
    admin = cursor.fetchone()
    conn.close()

    if admin:
        keyboard.append(["–ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å"])  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
    
    update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.",
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    )

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
def get_schedule(update: Update, context: CallbackContext) -> None:
    user_id = update.message.from_user.id
    if user_id in awaiting_admin_id:
        add_admin(update, context)
        return
    elif user_id in awaiting_remove_admin_id:
        remove_admin(update, context)
        return
    
    day = update.message.text
    if day == '–ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å':
        admin_panel(update, context)  # –î–æ–±–∞–≤–ª–µ–Ω –≤—ã–∑–æ–≤ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
        return

    conn = sqlite3.connect("schedule.db")
    cursor = conn.cursor()
    cursor.execute("SELECT lesson_number, time, subject, teacher FROM lessons WHERE day = ? ORDER BY lesson_number", (day,))
    lessons = cursor.fetchall()
    conn.close()

    response = f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day}:\n" if lessons else "‚ùå –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
    for num, time, subject, teacher in lessons:
        response += f"üìñ {num}-–π —É—Ä–æ–∫ ({time})\n   {subject} - {teacher}\n\n"

    update.message.reply_text(response)

# –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å
def admin_panel(update: Update, context: CallbackContext) -> None:
    user_id = update.message.from_user.id if update.message else update.callback_query.from_user.id
    
    conn = sqlite3.connect("schedule.db")
    cursor = conn.cursor()
    cursor.execute("SELECT id FROM admins WHERE id = ?", (user_id,))
    admin = cursor.fetchone()
    conn.close()
    
    if admin:
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="add_admin")],
            [InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="remove_admin")]
        ])
        
        if update.message:
            update.message.reply_text("üìã –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å:", reply_markup=keyboard)
        else:
            update.callback_query.edit_message_text("üìã –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å:", reply_markup=keyboard)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
    else:
        update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏.")

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
def request_admin_id(update: Update, context: CallbackContext) -> None:
    user_id = update.callback_query.from_user.id
    awaiting_admin_id[user_id] = True
    update.callback_query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∞–¥–º–∏–Ω—ã.")

# –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
def request_remove_admin_id(update: Update, context: CallbackContext) -> None:
    user_id = update.callback_query.from_user.id
    awaiting_remove_admin_id[user_id] = True
    update.callback_query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ –∞–¥–º–∏–Ω–æ–≤.")

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
def add_admin(update: Update, context: CallbackContext) -> None:
    user_id = update.message.from_user.id
    new_admin_id = update.message.text
    
    try:
        new_admin_id = int(new_admin_id)
        conn = sqlite3.connect("schedule.db")
        cursor = conn.cursor()
        cursor.execute("INSERT INTO admins (id) VALUES (?)", (new_admin_id,))
        conn.commit()
        conn.close()
        update.message.reply_text(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_admin_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω—ã!")
    except ValueError:
        update.message.reply_text("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
    finally:
        awaiting_admin_id.pop(user_id, None)

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
def remove_admin(update: Update, context: CallbackContext) -> None:
    user_id = update.message.from_user.id
    admin_id_to_remove = update.message.text
    
    try:
        admin_id_to_remove = int(admin_id_to_remove)
        conn = sqlite3.connect("schedule.db")
        cursor = conn.cursor()
        cursor.execute("DELETE FROM admins WHERE id = ?", (admin_id_to_remove,))
        conn.commit()
        conn.close()
        update.message.reply_text(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {admin_id_to_remove} —É–¥–∞–ª—ë–Ω –∏–∑ –∞–¥–º–∏–Ω–æ–≤!")
    except ValueError:
        update.message.reply_text("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
    finally:
        awaiting_remove_admin_id.pop(user_id, None)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main() -> None:
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, get_schedule))
    dp.add_handler(CallbackQueryHandler(request_admin_id, pattern="^add_admin$"))
    dp.add_handler(CallbackQueryHandler(request_remove_admin_id, pattern="^remove_admin$"))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
